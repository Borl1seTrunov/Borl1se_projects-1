{"ast":null,"code":"var _jsxFileName = \"/Users/boristrunov/Desktop/LevelCoin/project/src/CardStore.js\";\nimport React from \"react\";\nimport \"./styles/CardStore.css\";\nimport coinImage from \"./images/CoinIcon.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = /*#__PURE__*/React.memo(_c = function CardStore(props) {\n  let updateTypeText = ' за тап';\n  if (props.cardUpdateType === 'energy') {\n    updateTypeText = ' к максимальной энергии';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CardStore\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardName\",\n      children: props.card.cardName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardImageBox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.card.image,\n        className: \"CardImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CardData\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardUpdateData\",\n        children: [\"+\", props.card.cardUpdateData, updateTypeText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CardMainInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          value: props.card.cardUpdateType,\n          className: \"CardBuyButton\",\n          onClick: props.onClick,\n          name: props.cardName,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"CardLevel\",\n            name: props.cardName,\n            children: [props.cardLevel, \" \\u0443\\u0440.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CardPriceBox\",\n            name: props.cardName,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"CardPrice\",\n              name: props.cardName,\n              children: props.cardPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: coinImage,\n              name: props.cardName,\n              className: \"CardPriceCoinImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}, (prevProps, nextProps) => {\n  if (nextProps.cardLevel === prevProps.cardLevel) {\n    return true;\n  }\n  return false;\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$React.memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","coinImage","jsxDEV","_jsxDEV","_c2","memo","_c","CardStore","props","updateTypeText","cardUpdateType","className","children","card","cardName","fileName","_jsxFileName","lineNumber","columnNumber","src","image","cardUpdateData","value","onClick","name","cardLevel","cardPrice","prevProps","nextProps","$RefreshReg$"],"sources":["/Users/boristrunov/Desktop/LevelCoin/project/src/CardStore.js"],"sourcesContent":["import React from \"react\";\nimport \"./styles/CardStore.css\";\nimport coinImage from \"./images/CoinIcon.png\";\nexport default React.memo(function CardStore(props){\n\n    let updateTypeText = ' за тап';\n    if (props.cardUpdateType === 'energy'){\n        updateTypeText = ' к максимальной энергии'\n    }\n    \n    return (\n        <div className=\"CardStore\">\n            <div className=\"CardName\">\n                {props.card.cardName}\n            </div>\n            <div className=\"CardImageBox\">\n                <img src={props.card.image} className=\"CardImage\" />\n            </div>\n            <div className=\"CardData\">\n                <div className=\"CardUpdateData\">\n                    +{props.card.cardUpdateData}{updateTypeText}\n                </div>\n                <div className=\"CardMainInfo\">\n                    <button value={props.card.cardUpdateType} className=\"CardBuyButton\" onClick={props.onClick} name={props.cardName} >\n                        <span className=\"CardLevel\" name={props.cardName} >{props.cardLevel} ур.</span>\n                        <div className=\"CardPriceBox\" name={props.cardName}>\n                            <span className=\"CardPrice\" name={props.cardName} >{props.cardPrice}</span>\n                            <img src={coinImage} name={props.cardName} className=\"CardPriceCoinImage\" />\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}, (prevProps, nextProps) => {\n    if (nextProps.cardLevel === prevProps.cardLevel){\n        return true;\n    }\n    return false;\n}\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}