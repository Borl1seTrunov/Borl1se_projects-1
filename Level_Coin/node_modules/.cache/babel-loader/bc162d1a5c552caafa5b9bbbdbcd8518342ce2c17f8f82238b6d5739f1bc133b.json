{"ast":null,"code":"var _jsxFileName = \"/Users/boristrunov/Desktop/LevelCoin/project/src/RootApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { MainPage } from \"./pages/MainPage.js\";\nimport { StorePage } from \"./pages/StorePage.js\";\nimport { QuestsPage } from \"./pages/QuestsPage.js\";\nimport { ReferalsPage } from \"./pages/ReferalsPage.js\";\nimport { ErrorPage } from \"./pages/ErrorPage.js\";\nimport { ProfilePage } from \"./pages/ProfilePage.js\";\nimport gamepadStoreIcon from \"./images/gamepadStore.png\";\nimport energyStoreIcon from \"./images/energyStore.png\";\nimport catStoreIcon from \"./images/catError.gif\";\nimport coinImage from \"./images/CoinIcon.png\";\nimport Navigation from \"./Navigation.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RootApp() {\n  _s();\n  const [myCards, setMyCards] = useState([]);\n  const [money, setMoney] = useState(0);\n  const [energy, setEnergy] = useState(100);\n  const [moneyOnTap, setMoneyOnTap] = useState(1);\n  const [moneyPerSecond, setMoneyPerSecond] = useState(0);\n  let cardsConsole = [{\n    cardName: \"Монет за Тап\",\n    cardImage: gamepadStoreIcon,\n    cardUpdateType: \"click\",\n    cardUpdateData: 1,\n    cardLevel: 1,\n    cardMaxLevel: 3,\n    cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n    cardPrice: 10\n  }, {\n    cardName: \"Банка Энергии\",\n    cardImage: energyStoreIcon,\n    cardUpdateType: \"energy\",\n    cardUpdateData: 10,\n    cardLevel: 1,\n    cardMaxLevel: 10,\n    cardDescription: \"Эта карточка — настоящее сокровище для любителей игры. При её прокачке вы получаете дополнительную энергию, благодаря которой можете совершать больше тапов. Теперь у вас есть возможность увеличить свою продуктивность и заработать ещё больше очков!\",\n    cardPrice: 100\n  }];\n  let cardsGames = [{\n    cardName: \"Grand Theft Level\",\n    cardImage: catStoreIcon,\n    cardUpdateType: \"moneyPerSecond\",\n    cardUpdateData: 1,\n    cardLevel: 1,\n    cardMaxLevel: 5,\n    cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n    cardPrice: 10\n  }];\n  const [cards, setCards] = useState(cardsConsole);\n  const [gameCards, setGameCards] = useState(cardsGames);\n  const handleClick = event => {\n    if (energy >= moneyOnTap) {\n      setEnergy(energy => {\n        if (energy >= moneyOnTap) {\n          pop(event);\n          setMoney(money => money + moneyOnTap);\n          return energy - moneyOnTap;\n        } else if (energy <= 0) {\n          return 0;\n        } else {\n          return energy;\n        }\n      });\n    } else {\n      return;\n    }\n  };\n  function pop(e) {\n    let countParticles = Math.round(Math.random() * 5);\n    if (e.clientX === 0 && e.clientY === 0) {\n      const bbox = e.target.getBoundingClientRect();\n      const x = bbox.left + bbox.width / 2;\n      const y = bbox.top + bbox.height / 2;\n      for (let i = 0; i < countParticles; i++) {\n        createParticle(x, y, e.target.dataset.type);\n      }\n    } else {\n      for (let i = 0; i < countParticles; i++) {\n        createParticle(e.clientX, e.clientY, e.target.dataset.type);\n      }\n    }\n  }\n  function createParticle(x, y, type) {\n    const stickyElement = document.querySelector(\".ClickerGamepad\");\n    const particle = document.createElement('particle');\n    // document.body.appendChild(particle);\n    stickyElement.appendChild(particle);\n    let width = Math.floor(Math.random() * 30 + 30);\n    let height = width;\n    let destinationX = (Math.random() - 0.5) * 300;\n    let destinationY = (Math.random() - 0.5) * 300;\n    let rotation = Math.random() * 520;\n    let delay = Math.random() * 50;\n    particle.style.backgroundImage = `url(${coinImage})`;\n    particle.style.width = `${width}px`;\n    particle.style.height = `${height}px`;\n    const animation = particle.animate([{\n      transform: `translate(-50%, -50%) translate(${x}px, ${y}px) rotate(0deg)`,\n      opacity: 1\n    }, {\n      transform: `translate(-50%, -50%) translate(${x + destinationX / 2}px, ${y + destinationY}px) rotate(${rotation}deg)`,\n      opacity: 0.8\n    }, {\n      transform: `translate(-50%, -50%) translate(${x + destinationX}px, ${y - 15}px) rotate(${rotation}deg)`,\n      opacity: 0\n    }], {\n      duration: Math.random() * 1000 + 3000,\n      // Продолжительность всех эффектов\n      easing: 'cubic-bezier(0, .9, .57, 1)',\n      delay: delay\n    });\n    animation.onfinish = removeParticle;\n  }\n  function removeParticle(e) {\n    e.srcElement.effect.target.remove();\n  }\n  const incrementEnergy = () => {\n    if (energy <= 100) {\n      setEnergy(energy => energy + 1);\n    }\n  };\n  const incrementMoney = () => {\n    setMoney(money => money + moneyPerSecond);\n  };\n  useEffect(() => {\n    let timer = setInterval(incrementEnergy, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [energy]);\n  const buyCardAction = (cardCurr, cardPrice) => {\n    setMoney(mon => mon - cardPrice);\n    if (cardCurr.cardUpdateType === 'click') {\n      setMoneyOnTap(moneyOnTap => moneyOnTap + cardCurr.cardUpdateData);\n    }\n    if (cardCurr.cardUpdateType === 'moneyPerSecond') {\n      console.log(\"Update Money per Second\");\n      setMoneyPerSecond(moneyPerSecond => moneyPerSecond + cardCurr.cardUpdateData);\n    }\n    const newCards = cards.filter(card => {\n      if (card.cardName === cardCurr.cardName) {\n        card.cardLevel += 1;\n        card.cardPrice = Math.round(card.cardPrice * 2.71);\n        return card;\n      } else {\n        return card;\n      }\n    });\n    // setMyCards(newCards);\n    setCards(newCards);\n    const arrayObjectIndexOf = (list, findField, searchDataField) => {\n      let result = -1;\n      for (let i = 0; i < list.length; i++) {\n        if (list[i][findField] === searchDataField) {\n          result = 1;\n          return result;\n        }\n      }\n      return result;\n    };\n    let findIndex = arrayObjectIndexOf(myCards, 'cardName', cardCurr.cardName);\n    if (findIndex == -1) {\n      setMyCards(prev => [...prev, cardCurr]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RootApp\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          clickAction: handleClick,\n          money: money,\n          energy: energy,\n          moneyOnTap: moneyOnTap,\n          moneyPerSecond: moneyPerSecond\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/store\",\n        element: /*#__PURE__*/_jsxDEV(StorePage, {\n          money: money,\n          moneyOnTap: moneyOnTap,\n          buyCardActionClick: buyCardAction,\n          cards: cards,\n          gameCards: gameCards,\n          moneyPerSecond: moneyPerSecond\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quests\",\n        element: /*#__PURE__*/_jsxDEV(QuestsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/referals\",\n        element: /*#__PURE__*/_jsxDEV(ReferalsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n}\n_s(RootApp, \"m6MdSpzILW+4QYXlPMiKdFUf8cU=\");\n_c = RootApp;\n;\nvar _c;\n$RefreshReg$(_c, \"RootApp\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Link","MainPage","StorePage","QuestsPage","ReferalsPage","ErrorPage","ProfilePage","gamepadStoreIcon","energyStoreIcon","catStoreIcon","coinImage","Navigation","jsxDEV","_jsxDEV","RootApp","_s","myCards","setMyCards","money","setMoney","energy","setEnergy","moneyOnTap","setMoneyOnTap","moneyPerSecond","setMoneyPerSecond","cardsConsole","cardName","cardImage","cardUpdateType","cardUpdateData","cardLevel","cardMaxLevel","cardDescription","cardPrice","cardsGames","cards","setCards","gameCards","setGameCards","handleClick","event","pop","e","countParticles","Math","round","random","clientX","clientY","bbox","target","getBoundingClientRect","x","left","width","y","top","height","i","createParticle","dataset","type","stickyElement","document","querySelector","particle","createElement","appendChild","floor","destinationX","destinationY","rotation","delay","style","backgroundImage","animation","animate","transform","opacity","duration","easing","onfinish","removeParticle","srcElement","effect","remove","incrementEnergy","incrementMoney","timer","setInterval","clearInterval","buyCardAction","cardCurr","mon","console","log","newCards","filter","card","arrayObjectIndexOf","list","findField","searchDataField","result","length","findIndex","prev","className","children","path","element","clickAction","fileName","_jsxFileName","lineNumber","columnNumber","buyCardActionClick","_c","$RefreshReg$"],"sources":["/Users/boristrunov/Desktop/LevelCoin/project/src/RootApp.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport { Routes, Route, Link} from \"react-router-dom\";\n\nimport { MainPage } from \"./pages/MainPage.js\";\nimport { StorePage } from \"./pages/StorePage.js\";\nimport { QuestsPage } from \"./pages/QuestsPage.js\";\nimport { ReferalsPage } from \"./pages/ReferalsPage.js\";\nimport { ErrorPage } from \"./pages/ErrorPage.js\";\nimport { ProfilePage } from \"./pages/ProfilePage.js\";\n\nimport gamepadStoreIcon from \"./images/gamepadStore.png\";\nimport energyStoreIcon from \"./images/energyStore.png\";\nimport catStoreIcon from \"./images/catError.gif\";\n\nimport coinImage from \"./images/CoinIcon.png\";\n\nimport Navigation from \"./Navigation.js\";\n\nexport default function RootApp(){\n    const [myCards, setMyCards] = useState([]);\n    const [money, setMoney] = useState(0);\n    const [energy, setEnergy] = useState(100);\n    const [moneyOnTap, setMoneyOnTap] = useState(1);\n    const [moneyPerSecond, setMoneyPerSecond] = useState(0);\n    let cardsConsole = [{\n        cardName: \"Монет за Тап\",\n        cardImage: gamepadStoreIcon,\n        cardUpdateType: \"click\",\n        cardUpdateData: 1,\n        cardLevel: 1,\n        cardMaxLevel: 3,\n        cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n        cardPrice: 10\n    },\n    {\n        cardName: \"Банка Энергии\",\n        cardImage: energyStoreIcon,\n        cardUpdateType: \"energy\",\n        cardUpdateData: 10,\n        cardLevel: 1,\n        cardMaxLevel: 10,\n        cardDescription: \"Эта карточка — настоящее сокровище для любителей игры. При её прокачке вы получаете дополнительную энергию, благодаря которой можете совершать больше тапов. Теперь у вас есть возможность увеличить свою продуктивность и заработать ещё больше очков!\",\n        cardPrice: 100\n    }\n    ];\n\n    let cardsGames = [\n        {\n        cardName: \"Grand Theft Level\",\n        cardImage: catStoreIcon,\n        cardUpdateType: \"moneyPerSecond\",\n        cardUpdateData: 1,\n        cardLevel: 1,\n        cardMaxLevel: 5,\n        cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n        cardPrice: 10\n    }\n];\n    const [cards, setCards] = useState(cardsConsole);\n    const [gameCards, setGameCards] = useState(cardsGames);\n    const handleClick = (event) => {\n        if (energy >= moneyOnTap){\n            setEnergy(energy => {\n                if (energy >= moneyOnTap){\n                    pop(event)\n                    setMoney(money => money + moneyOnTap);\n                    return energy - moneyOnTap\n                }else if (energy <= 0){\n                    return 0;\n                }else{\n                    return energy;\n                }\n            });\n        }else{\n            return;\n        }\n    }\n\n\n    function pop (e) {\n        let countParticles = Math.round(Math.random() * 5);\n        if (e.clientX === 0 && e.clientY === 0) {\n            const bbox = e.target.getBoundingClientRect();\n            const x = bbox.left + bbox.width / 2;\n            const y = bbox.top + bbox.height / 2;\n            for (let i = 0; i < countParticles; i++){\n                createParticle(x, y, e.target.dataset.type);\n            }\n            } else {\n                for (let i = 0; i < countParticles; i++){\n                    createParticle(e.clientX, e.clientY, e.target.dataset.type);\n                }\n            }\n    }\n    function createParticle (x, y, type) {\n        const stickyElement = document.querySelector(\".ClickerGamepad\");\n        const particle = document.createElement('particle');\n        // document.body.appendChild(particle);\n        stickyElement.appendChild(particle)\n        let width = Math.floor(Math.random() * 30 + 30);\n        let height = width;\n        let destinationX = (Math.random() - 0.5) * 300;\n        let destinationY = (Math.random() - 0.5) * 300;\n        let rotation = Math.random() * 520;\n        let delay = Math.random() * 50;\n        particle.style.backgroundImage = `url(${coinImage})`;\n        particle.style.width = `${width}px`;\n        particle.style.height = `${height}px`;\n        const animation = particle.animate(\n            [\n            {\n                transform: `translate(-50%, -50%) translate(${x}px, ${y}px) rotate(0deg)`,\n                opacity: 1\n            },\n            {\n                transform: `translate(-50%, -50%) translate(${x + destinationX / 2}px, ${y + destinationY}px) rotate(${rotation}deg)`,\n                opacity: 0.8\n            },\n            {\n                transform: `translate(-50%, -50%) translate(${x + destinationX}px, ${y - 15}px) rotate(${rotation}deg)`,\n                opacity: 0\n            }\n            ]\n            , {\n            duration: Math.random() * 1000 + 3000, // Продолжительность всех эффектов\n            easing: 'cubic-bezier(0, .9, .57, 1)',\n            delay: delay\n        });\n        animation.onfinish = removeParticle;\n    }\n    function removeParticle (e) {\n        e.srcElement.effect.target.remove();\n    }\n\n    const incrementEnergy = () => {\n        if (energy <= 100){\n            setEnergy(energy => energy + 1);\n        }\n    }\n\n    const incrementMoney = () => {\n        setMoney(money => money + moneyPerSecond);\n    }\n\n    useEffect(() => {\n        let timer = setInterval(incrementEnergy, 1000);\n        return () => {\n            clearInterval(timer);\n        }\n    },[energy]);\n\n    const buyCardAction = (cardCurr, cardPrice) => {\n        setMoney(mon => mon - cardPrice);\n        if (cardCurr.cardUpdateType === 'click'){\n            setMoneyOnTap(moneyOnTap => moneyOnTap + cardCurr.cardUpdateData);\n        }\n        if (cardCurr.cardUpdateType === 'moneyPerSecond'){\n            console.log(\"Update Money per Second\")\n            setMoneyPerSecond(moneyPerSecond => moneyPerSecond + cardCurr.cardUpdateData);\n        }\n        const newCards = cards.filter((card) => {\n            if (card.cardName === cardCurr.cardName){\n                card.cardLevel += 1;\n                card.cardPrice = Math.round(card.cardPrice * 2.71);\n                return card;\n            }else{\n                return card;\n            }\n        });\n        // setMyCards(newCards);\n        setCards(newCards);\n        const arrayObjectIndexOf = (list, findField, searchDataField) => {\n            let result = -1;\n            for (let i = 0; i < list.length; i++){\n                if (list[i][findField] === searchDataField){\n                    result = 1;\n                    return result;\n                }\n            }\n            return result;\n        }\n        let findIndex = arrayObjectIndexOf(myCards, 'cardName', cardCurr.cardName);\n        if (findIndex == -1){\n            setMyCards((prev) => \n                [...prev, cardCurr]\n            )\n        }\n    }\n\n    return (\n        <div className=\"RootApp\">\n            <Routes>\n                <Route path=\"/\" element={<MainPage clickAction={handleClick} money={money} energy={energy} moneyOnTap={moneyOnTap} moneyPerSecond={moneyPerSecond} />}/>\n                <Route path=\"/store\" element={<StorePage money={money} moneyOnTap={moneyOnTap} buyCardActionClick={buyCardAction} cards={cards} gameCards={gameCards} moneyPerSecond={moneyPerSecond}/>} />\n                <Route path=\"/quests\" element={<QuestsPage />} />\n                <Route path=\"/referals\" element={<ReferalsPage />} />\n                <Route path=\"/profile\" element={<ProfilePage />} />\n                <Route path=\"/*\" element={<ErrorPage />} />\n            </Routes>\n            <Navigation />\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}