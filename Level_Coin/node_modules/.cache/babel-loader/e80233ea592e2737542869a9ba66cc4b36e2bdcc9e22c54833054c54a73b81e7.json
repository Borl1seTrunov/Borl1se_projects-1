{"ast":null,"code":"var _jsxFileName = \"/Users/boristrunov/Desktop/LevelCoin/project/src/RootApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { MainPage } from \"./pages/MainPage.js\";\nimport { StorePage } from \"./pages/StorePage.js\";\nimport { QuestsPage } from \"./pages/QuestsPage.js\";\nimport { ReferalsPage } from \"./pages/ReferalsPage.js\";\nimport { ErrorPage } from \"./pages/ErrorPage.js\";\nimport { ProfilePage } from \"./pages/ProfilePage.js\";\nimport Navigation from \"./Navigation.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RootApp() {\n  _s();\n  const [myCards, setMyCards] = useState([]);\n  const [money, setMoney] = useState(0);\n  const [energy, setEnergy] = useState(100);\n  const [moneyOnTap, setMoneyOnTap] = useState(1);\n  let cardsConsole = [{\n    cardName: \"Монет за Тап\",\n    cardImage: gamepadStoreIcon,\n    cardUpdateType: \"click\",\n    cardUpdateData: 1,\n    cardLevel: 1,\n    cardMaxLevel: 3,\n    cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n    cardPrice: 10\n  }, {\n    cardName: \"Банка Энергии\",\n    cardImage: energyStoreIcon,\n    cardUpdateType: \"energy\",\n    cardUpdateData: 10,\n    cardLevel: 1,\n    cardMaxLevel: 10,\n    cardDescription: \"Эта карточка — настоящее сокровище для любителей игры. При её прокачке вы получаете дополнительную энергию, благодаря которой можете совершать больше тапов. Теперь у вас есть возможность увеличить свою продуктивность и заработать ещё больше очков!\",\n    cardPrice: 100\n  }];\n  const [cards, setCards] = useState(cardsConsole);\n  const handleClick = () => {\n    if (energy <= 0) {\n      return;\n    }\n    setMoney(money => money + moneyOnTap);\n    setEnergy(energy => energy - moneyOnTap);\n  };\n  const incrementEnergy = () => {\n    if (energy <= 100) {\n      setEnergy(energy => energy + 1);\n    }\n  };\n  useEffect(() => {\n    let timer = setInterval(incrementEnergy, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, [energy]);\n  const buyCardAction = card => {\n    setCards(prev => prev.filter(card => {\n      if (card.cardName === cardCurr.cardName) {\n        card.cardLevel += 1;\n        card.cardPrice = Math.round(card.cardPrice * 2.71);\n        return card;\n      } else {\n        return card;\n      }\n    }));\n    console.log(card);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RootApp\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainPage, {\n          clickAction: handleClick,\n          money: money,\n          energy: energy,\n          moneyOnTap: moneyOnTap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/store\",\n        element: /*#__PURE__*/_jsxDEV(StorePage, {\n          money: money,\n          moneyOnTap: moneyOnTap,\n          buyCardActionClick: buyCardAction,\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quests\",\n        element: /*#__PURE__*/_jsxDEV(QuestsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/referals\",\n        element: /*#__PURE__*/_jsxDEV(ReferalsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(RootApp, \"q9awaVt0Z3m3DyGFXmX8c3/Jbe8=\");\n_c = RootApp;\n;\nvar _c;\n$RefreshReg$(_c, \"RootApp\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Link","MainPage","StorePage","QuestsPage","ReferalsPage","ErrorPage","ProfilePage","Navigation","jsxDEV","_jsxDEV","RootApp","_s","myCards","setMyCards","money","setMoney","energy","setEnergy","moneyOnTap","setMoneyOnTap","cardsConsole","cardName","cardImage","gamepadStoreIcon","cardUpdateType","cardUpdateData","cardLevel","cardMaxLevel","cardDescription","cardPrice","energyStoreIcon","cards","setCards","handleClick","incrementEnergy","timer","setInterval","clearInterval","buyCardAction","card","prev","filter","cardCurr","Math","round","console","log","className","children","path","element","clickAction","fileName","_jsxFileName","lineNumber","columnNumber","buyCardActionClick","_c","$RefreshReg$"],"sources":["/Users/boristrunov/Desktop/LevelCoin/project/src/RootApp.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport { Routes, Route, Link} from \"react-router-dom\";\n\nimport { MainPage } from \"./pages/MainPage.js\";\nimport { StorePage } from \"./pages/StorePage.js\";\nimport { QuestsPage } from \"./pages/QuestsPage.js\";\nimport { ReferalsPage } from \"./pages/ReferalsPage.js\";\nimport { ErrorPage } from \"./pages/ErrorPage.js\";\nimport { ProfilePage } from \"./pages/ProfilePage.js\";\n\nimport Navigation from \"./Navigation.js\";\n\nexport default function RootApp(){\n    const [myCards, setMyCards] = useState([]);\n    const [money, setMoney] = useState(0);\n    const [energy, setEnergy] = useState(100);\n    const [moneyOnTap, setMoneyOnTap] = useState(1);\n    let cardsConsole = [{\n        cardName: \"Монет за Тап\",\n        cardImage: gamepadStoreIcon,\n        cardUpdateType: \"click\",\n        cardUpdateData: 1,\n        cardLevel: 1,\n        cardMaxLevel: 3,\n        cardDescription: \"Эта карточка — настоящий подарок для тех, кто любит зарабатывать. При её прокачке вы получаете дополнительную прибыль за каждый тап. Так что теперь каждое ваше действие будет приносить ещё больше денег!\",\n        cardPrice: 10\n    },\n    {\n        cardName: \"Банка Энергии\",\n        cardImage: energyStoreIcon,\n        cardUpdateType: \"energy\",\n        cardUpdateData: 10,\n        cardLevel: 1,\n        cardMaxLevel: 10,\n        cardDescription: \"Эта карточка — настоящее сокровище для любителей игры. При её прокачке вы получаете дополнительную энергию, благодаря которой можете совершать больше тапов. Теперь у вас есть возможность увеличить свою продуктивность и заработать ещё больше очков!\",\n        cardPrice: 100\n    }\n    ];\n    const [cards, setCards] = useState(cardsConsole);\n    const handleClick = () => {\n        if (energy <= 0){\n            return;\n        }\n        setMoney(money => money + moneyOnTap);\n        setEnergy(energy => energy - moneyOnTap);\n    }\n\n    const incrementEnergy = () => {\n        if (energy <= 100){\n            setEnergy(energy => energy + 1);\n        }\n    }\n\n    useEffect(() => {\n        let timer = setInterval(incrementEnergy, 1000);\n        return () => {\n            clearInterval(timer);\n        }\n    },[energy]);\n\n    const buyCardAction = (card) => {\n        setCards((prev) => \n            prev.filter((card) => {\n                if (card.cardName === cardCurr.cardName){\n                    card.cardLevel += 1;\n                    card.cardPrice = Math.round(card.cardPrice * 2.71);\n                    return card;\n                }else{\n                    return card;\n                }\n            })\n        )\n        console.log(card);\n    }\n\n    return (\n        <div className=\"RootApp\">\n            <Routes>\n                <Route path=\"/\" element={<MainPage clickAction={handleClick} money={money} energy={energy} moneyOnTap={moneyOnTap} />}/>\n                <Route path=\"/store\" element={<StorePage money={money} moneyOnTap={moneyOnTap} buyCardActionClick={buyCardAction} cards={cards} />} />\n                <Route path=\"/quests\" element={<QuestsPage />} />\n                <Route path=\"/referals\" element={<ReferalsPage />} />\n                <Route path=\"/profile\" element={<ProfilePage />} />\n                <Route path=\"/*\" element={<ErrorPage />} />\n            </Routes>\n            <Navigation />\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}