{"ast":null,"code":"exports.BaseError = class BaseError extends Error {\n  /**\n   * @class BaseError\n   * @constructor\n   * @private\n   * @param  {String} code Error code\n   * @param  {String} message Error message\n   */\n  constructor(code, message) {\n    super(`${code}: ${message}`);\n    this.code = code;\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message\n    };\n  }\n};\nexports.FatalError = class FatalError extends exports.BaseError {\n  /**\n   * Fatal Error. Error code is `\"EFATAL\"`.\n   * @class FatalError\n   * @constructor\n   * @param  {String|Error} data Error object or message\n   */\n  constructor(data) {\n    const error = typeof data === 'string' ? null : data;\n    const message = error ? error.message : data;\n    super('EFATAL', message);\n    if (error) this.stack = error.stack;\n  }\n};\nexports.ParseError = class ParseError extends exports.BaseError {\n  /**\n   * Error during parsing. Error code is `\"EPARSE\"`.\n   * @class ParseError\n   * @constructor\n   * @param  {String} message Error message\n   * @param  {http.IncomingMessage} response Server response\n   */\n  constructor(message, response) {\n    super('EPARSE', message);\n    this.response = response;\n  }\n};\nexports.TelegramError = class TelegramError extends exports.BaseError {\n  /**\n   * Error returned from Telegram. Error code is `\"ETELEGRAM\"`.\n   * @class TelegramError\n   * @constructor\n   * @param  {String} message Error message\n   * @param  {http.IncomingMessage} response Server response\n   */\n  constructor(message, response) {\n    super('ETELEGRAM', message);\n    this.response = response;\n  }\n};","map":{"version":3,"names":["exports","BaseError","Error","constructor","code","message","toJSON","FatalError","data","error","stack","ParseError","response","TelegramError"],"sources":["/Users/boristrunov/Desktop/LevelCoin/project/node_modules/node-telegram-bot-api/src/errors.js"],"sourcesContent":["exports.BaseError = class BaseError extends Error {\n  /**\n   * @class BaseError\n   * @constructor\n   * @private\n   * @param  {String} code Error code\n   * @param  {String} message Error message\n   */\n  constructor(code, message) {\n    super(`${code}: ${message}`);\n    this.code = code;\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message,\n    };\n  }\n};\n\n\nexports.FatalError = class FatalError extends exports.BaseError {\n  /**\n   * Fatal Error. Error code is `\"EFATAL\"`.\n   * @class FatalError\n   * @constructor\n   * @param  {String|Error} data Error object or message\n   */\n  constructor(data) {\n    const error = (typeof data === 'string') ? null : data;\n    const message = error ? error.message : data;\n    super('EFATAL', message);\n    if (error) this.stack = error.stack;\n  }\n};\n\n\nexports.ParseError = class ParseError extends exports.BaseError {\n  /**\n   * Error during parsing. Error code is `\"EPARSE\"`.\n   * @class ParseError\n   * @constructor\n   * @param  {String} message Error message\n   * @param  {http.IncomingMessage} response Server response\n   */\n  constructor(message, response) {\n    super('EPARSE', message);\n    this.response = response;\n  }\n};\n\n\nexports.TelegramError = class TelegramError extends exports.BaseError {\n  /**\n   * Error returned from Telegram. Error code is `\"ETELEGRAM\"`.\n   * @class TelegramError\n   * @constructor\n   * @param  {String} message Error message\n   * @param  {http.IncomingMessage} response Server response\n   */\n  constructor(message, response) {\n    super('ETELEGRAM', message);\n    this.response = response;\n  }\n};\n"],"mappings":"AAAAA,OAAO,CAACC,SAAS,GAAG,MAAMA,SAAS,SAASC,KAAK,CAAC;EAChD;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAACC,IAAI,EAAEC,OAAO,EAAE;IACzB,KAAK,CAAC,GAAGD,IAAI,KAAKC,OAAO,EAAE,CAAC;IAC5B,IAAI,CAACD,IAAI,GAAGA,IAAI;EAClB;EACAE,MAAMA,CAAA,EAAG;IACP,OAAO;MACLF,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,OAAO,EAAE,IAAI,CAACA;IAChB,CAAC;EACH;AACF,CAAC;AAGDL,OAAO,CAACO,UAAU,GAAG,MAAMA,UAAU,SAASP,OAAO,CAACC,SAAS,CAAC;EAC9D;AACF;AACA;AACA;AACA;AACA;EACEE,WAAWA,CAACK,IAAI,EAAE;IAChB,MAAMC,KAAK,GAAI,OAAOD,IAAI,KAAK,QAAQ,GAAI,IAAI,GAAGA,IAAI;IACtD,MAAMH,OAAO,GAAGI,KAAK,GAAGA,KAAK,CAACJ,OAAO,GAAGG,IAAI;IAC5C,KAAK,CAAC,QAAQ,EAAEH,OAAO,CAAC;IACxB,IAAII,KAAK,EAAE,IAAI,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK;EACrC;AACF,CAAC;AAGDV,OAAO,CAACW,UAAU,GAAG,MAAMA,UAAU,SAASX,OAAO,CAACC,SAAS,CAAC;EAC9D;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,WAAWA,CAACE,OAAO,EAAEO,QAAQ,EAAE;IAC7B,KAAK,CAAC,QAAQ,EAAEP,OAAO,CAAC;IACxB,IAAI,CAACO,QAAQ,GAAGA,QAAQ;EAC1B;AACF,CAAC;AAGDZ,OAAO,CAACa,aAAa,GAAG,MAAMA,aAAa,SAASb,OAAO,CAACC,SAAS,CAAC;EACpE;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,WAAWA,CAACE,OAAO,EAAEO,QAAQ,EAAE;IAC7B,KAAK,CAAC,WAAW,EAAEP,OAAO,CAAC;IAC3B,IAAI,CAACO,QAAQ,GAAGA,QAAQ;EAC1B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}